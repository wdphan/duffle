export declare const localize: (text: string, replacements?: any[string]) => any;
export declare const replaceMarkdown: (markdownText: string) => any;
export declare const keys: {
    connectorName: string;
    connectorShortName: string;
    suggestedExtensionBrowser: string;
    walletConnectLogo: string;
};
/**
 * Only markdown currently supported is **bold** highlighting.
 * If more is needed I suggest using a library
 */
declare const _default: {
    en: {
        onboardingScreen: {
            heading: string;
            h1: string;
            p: string;
            ctaText: string;
            ctaUrl: string;
        };
        aboutScreen: {
            heading: string;
            a_h1: string;
            a_p: string;
            b_h1: string;
            b_p: string;
            c_h1: string;
            c_p: string;
            ctaText: string;
            ctaUrl: string;
        };
        connectorsScreen: {
            heading: string;
            newcomer: string;
            h1: string;
            p: string;
        };
        mobileConnectorsScreen: {
            heading: string;
        };
        scanScreen: {
            heading: string;
            tooltip: {
                walletConnect: string;
                default: string;
            };
        };
        downloadAppScreen: {
            heading: string;
            iosAndroid: string;
            ios: string;
            android: string;
        };
        injectionScreen: {
            unavailable: {
                h1: string;
                p: string;
            };
            install: {
                h1: string;
                p: string;
            };
            connecting: {
                h1: string;
                p: string;
                injected_h1: string;
                injected_p: string;
            };
            expiring: {
                requestWillExpiryIn: string;
            };
            connected: {
                h1: string;
                p: string;
            };
            rejected: {
                h1: string;
                p: string;
            };
            failed: {
                h1: string;
                p: string;
            };
            notconnected: {
                h1: string;
                p: string;
            };
        };
        profileScreen: {
            heading: string;
            unsupported: string;
        };
        switchNetworkScreen: {
            heading: string;
        };
    };
};
export default _default;
